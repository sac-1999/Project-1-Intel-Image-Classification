# -*- coding: utf-8 -*-
"""utils.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lPqe245NwWazX5Y57ibiusCNNK6psIJH
"""

from sklearn import metrics
from sklearn.metrics import classification_report
import numpy as np
import matplotlib.pyplot as plt

def test_prediction(model, images, actual_labels):
    
    pred = model.predict(images)
    pred_labels = np.argmax(pred , axis = 1)
    actual_labels = np.argmax(actual_labels, axis = 1)

    confusion = metrics.confusion_matrix(actual_labels, pred_labels)
    report = classification_report(actual_labels, pred_labels, digits = 3)
    
    return confusion,report

def test_data_for_matrix(test_ds):
    test_img = []
    test_label = []
    for element in test_ds.as_numpy_iterator():
        for img in element[0]:
            test_img.append(img)
        
        for label in element[1]:
            test_label.append(label)

    test_img = np.array(test_img)
    test_label = np.array(test_label)

    return test_img, test_label

np.zeros(10)

def plot_accuracy(accuracy_train, accuracy_val):
    epochs = range(1,len(accuracy_train)+1)
    plt.plot(epochs, accuracy_train, 'r', label='Training accuracy')
    plt.plot(epochs, accuracy_val, 'g', label='validation accuracy')
    plt.title('Training and Validation accuracy')
    plt.xlabel('Epochs')
    plt.ylabel('accuracy')
    plt.legend()
    plt.show()

def plot_loss(loss_train, loss_val):
    epochs = range(1,len(loss_train)+1)
    plt.plot(epochs, loss_train, 'g', label='Training loss')
    plt.plot(epochs, loss_val, 'b', label='validation loss')
    plt.title('Training and Validation loss')
    plt.xlabel('Epochs')
    plt.ylabel('Loss')
    plt.legend()
    plt.show()